<?xml version="1.0"?>

<launch>

<!-- Everything launched / configured from here, no other launch files used -->

<!-- Static TF for base_link to base_footprint -->
  <node name="static_footprint_to_link" pkg="tf" type="static_transform_publisher" args="0.00 0.0 0.0 0.0 0.0 0.0 base_footprint base_link 50" />

<!-- Joystick Node -->
<!--Publishes /joy (sensor_msgs/Joy) --> 
  <node pkg="joy" type="joy_node" name="joystick" output="screen">
    <param name="autorepeat_rate" value="1" />
    <param name="deadzone" value="0.01" />
  </node>


<!-- Joystick to Twist Node -->
<!-- Subscribes /joy (sensor_msgs/Joy) -->
<!-- Publishes /cmd_vel (geometry_msgs/Twist) -->
  <node pkg="teleop_twist_joy" type="teleop_node" name="joystick_to_twist" output="screen">
    <param name="scale_linear" value="0.05" />
    <param name="scale_angular" value="0.314" />
  </node>


<!-- Motor Driver Node -->
<!-- Subscribes /cmd_vel (geometry_msgs/Twist) -->
<!-- Publishes /lwheel_ticks and /rwheel_ticks (std_msgs/Int32) -->
  <node pkg="edukit_bot" type="driver_node" name="driver" output="screen" />


<!-- Odomotry Node -->
<!-- Subscribes /lwheel_ticks and /rwheel_ticks (std_msgs/Int32) -->
<!-- Publishes /raw_odom (nav_msgs/Odometry) with frame_id odom and child_frame_id base_link and -->
<!-- Publishes TF for frame_id odom to child_frame_id base_link-->
<!--  <node pkg="edukit_bot" type="odom_node" name="odom" output="screen" /> -->


<!-- Lidar Node -->
<!-- Publishes /scan (sensor_msgs/LaserScan) and /pointcloud2d (sensor_msgs/PointCloud) with frame_id base_laser -->
  <node pkg="ldlidar_ros" type="ldlidar_ros_node" name="ldlidar_publisher_ld19" output="screen">
    <param name="product_name" value="LDLiDAR_LD19"/>
    <param name="serial_baudrate" value="230400"/>
    <!-- more info in ldlidar_ros/launch/ld19.launch -->
  </node>
<!-- Static TF for laser_link to base_link -->
  <node name="static_base_to_laser" pkg="tf" type="static_transform_publisher" args="0.04 0.0 0.11 1.571 0.0 0.0 base_link base_laser 50" />


<!-- IMU Node -->
<!-- Publishes /raw_imu (sensor_msgs/Imu) and /imu/mag (sensor_msgs/MagneticField) with frame_id base_imu -->
<!--  <node pkg="ros_icm20948" type="talker.py" name="ros_icm20948" respawn="true" respawn_delay="2" output="screen" /> -->
<!-- Static TF for base_imu to base_link -->
  <node name="static_base_to_imu" pkg="tf" type="static_transform_publisher" args="-0.04 0.0 0.07 1.571 0.0 0.0 base_link base_imu 50" />


<!-- IMU Calibration -->
<!-- Subscribes /raw_imu -->
<!-- Publishes /imu/data_raw -->
<!--  <node pkg="imu_calib" type="apply_calib" name="apply_calib" output="screen">
    <param name="calib_file" value="$(find imu_calib)/param/imu_calib.yaml" />
    <param name="calibrate_gyros" value="true" />
  </node> -->


<!-- Filter and fuse raw imu data -->
<!-- Subscribes /imu/data_raw and /imu/mag -->
<!-- Publishes /imu/data -->
<!--  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
    <param name="fixed_frame" value="base_link" />
    <param name="use_mag" value="true" />
    <param name="publish_tf" value="false" />
    <param name="use_magnetic_field_msg" value="true" /> 
    <param name="world_frame" value="enu" />
    <param name="orientation_stddev" value="0.05" />
  </node> -->

<!-- Join Odom and IMU data -->
<!-- Subscribes /imu/data and /raw_odom -->
<!-- Publishes /odom (nav_msgs/Odometry) with frame_id odom and child_frame_id base_link and -->
<!-- Publishes TF for frame_id odom to child_frame_id base_link-->
<!--  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
    <remap from="odometry/filtered" to="odom" />
    <rosparam command="load" file="$(find edukit_bot)/param/robot_localization.yaml" />
  </node> -->

<!-- XX -->
  <!-- <include file="$(find localization)/launch/odom_filter_tracker.launch" /> -->

</launch>
