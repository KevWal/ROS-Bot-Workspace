#!/usr/bin/env python3

import rospy
from geometry_msgs.msg import Twist
from std_msgs.msg import Int32
from PCA9685 import PCA9685
from gpiozero import DigitalInputDevice
from time import sleep
import signal
import sys

encoder_a_l = 23
encoder_b_l = 22
pwm_pin_l = 5
fwd_pin_l = 4
bwd_pin_l = 3

encoder_a_r = 24
encoder_b_r = 25
pwm_pin_r = 0
fwd_pin_r = 1
bwd_pin_r = 2

power = 50
enc_value_l = 0
enc_value_r = 0

def signal_handler(sig, frame):
    pwm.setDutycycle(pwm_pin_l, 0)
    pwm.setDutycycle(pwm_pin_r, 0)
    print(enc_value_l, enc_value_r)
    sys.exit(0)

def enc_increment_l():
    # Our encoders dont recognise backwards, but if power is negative, they will be going backwards
    global enc_value_l
    if power > 0:
        enc_value_l += 1
        #print("inc")
    else:
        enc_value_l -= 1
        #print("dec")

def enc_increment_r():
    # Our encoders dont recognise backwards, but if power is negative, they will be going backwards
    global enc_value_r
    if power > 0:
        enc_value_r += 1
        #print("inc")
    else:
        enc_value_r -= 1
        #print("dec")


pwm = PCA9685(0x40, debug=False)
pwm.setPWMFreq(50)

signal.signal(signal.SIGINT, signal_handler)

encoder_l = DigitalInputDevice(encoder_a_l, pull_up=None)
encoder_l.when_activated = enc_increment_l
encoder_l.when_deactivated = enc_increment_l

encoder_r = DigitalInputDevice(encoder_a_r, pull_up=None)
encoder_r.when_activated = enc_increment_r
encoder_r.when_deactivated = enc_increment_r

duty_cycle = abs(power)
pwm.setDutycycle(pwm_pin_l, duty_cycle)
pwm.setDutycycle(pwm_pin_r, duty_cycle)

# Positive speeds move wheels forward, negative speeds move wheels backward
if power < 0:
    pwm.setLevel(fwd_pin_r, 0)
    pwm.setLevel(bwd_pin_r, 1)
    pwm.setLevel(fwd_pin_l, 0)
    pwm.setLevel(bwd_pin_l, 1)
else:
    pwm.setLevel(fwd_pin_r, 1)
    pwm.setLevel(bwd_pin_r, 0)
    pwm.setLevel(fwd_pin_l, 1)
    pwm.setLevel(bwd_pin_l, 0)

for x in range(5000):
    sleep(0.01)
    print(enc_value_l, enc_value_r)

signal_handler(0,0)

